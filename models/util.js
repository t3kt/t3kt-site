// Generated by CoffeeScript 1.6.3
(function() {
  var Deferred, request;

  request = require('request');

  Deferred = require('Deferred');

  exports.NOT_IMPLEMENTED = function(msg) {
    throw new Error("Not implemented: " + (msg || '') + "...");
  };

  exports.DBG_DEFERRED = function(dfd) {
    return dfd.done(function(x) {
      return console.log('DONE', x);
    }).fail(function(x) {
      return console.log('FAIL', x);
    });
  };

  exports.compare = function(a, b) {
    if (a === b) {
      return 0;
    }
    if (a < b) {
      return -1;
    } else {
      return 1;
    }
  };

  exports.requestAsync = function(url) {
    console.log("making request: " + url);
    return Deferred(function(dfd) {
      return request(url, function(error, response, body) {
        if (error) {
          return dfd.reject(error);
        } else {
          return dfd.resolve(body, response);
        }
      });
    });
  };

  exports.limitSize = function(size, maxSize) {
    var aspect, height, width;
    aspect = size.width / size.height;
    width = size.width, height = size.height;
    if (maxSize.width && width > maxSize.width) {
      width = maxSize.width;
      height = maxSize.width / aspect;
    }
    if (maxSize.height && height > maxSize.height) {
      height = maxSize.height;
      width = maxSize.height * aspect;
    }
    return {
      width: width,
      height: height
    };
  };

  exports.throwError = function(err) {
    throw err;
  };

}).call(this);
