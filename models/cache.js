// Generated by CoffeeScript 1.6.3
(function() {
  var Cache, Deferred, cache, config;

  config = require('../config/config');

  Deferred = require("Deferred");

  Cache = require("mem-cache");

  cache = new Cache(config.cacheTimeout);

  module.exports = {
    getOrLoad: function(key, load) {
      var value;
      value = cache.get(key);
      if (value !== null) {
        return value;
      }
      value = load(key);
      cache.set(key, value);
      return value;
    },
    getOrLoadAsync: function(key, load) {
      var value;
      value = cache.get(key);
      if (value !== null) {
        return Deferred.when(value);
      }
      return Deferred.when(load(key)).done(function(val) {
        cache.set(key, val);
      });
    },
    getAsync: function(key) {
      var result, value;
      value = cache.get(key);
      result = Deferred();
      if (value === null) {
        result.reject(null);
      } else {
        result.resolve(value);
      }
      return result.promise();
    },
    set: function(key, value) {
      return cache.set(key, value);
    },
    get: function(key) {
      return cache.get(key);
    }
  };

}).call(this);
