// Generated by CoffeeScript 1.6.3
(function() {
  var Deferred, NOT_IMPLEMENTED, TypeUpdater, config, db, registerTypeModule, supportedTypes, updateAll, util;

  config = require('../config/config');

  util = require('../models/util');

  NOT_IMPLEMENTED = util.NOT_IMPLEMENTED;

  db = require('../models/db');

  Deferred = require('Deferred');

  TypeUpdater = (function() {
    function TypeUpdater() {}

    TypeUpdater.prototype.run = function(projects) {
      var _this = this;
      return db.asyncFindOne('itemType', {
        type: this.constructor.type
      }).pipe(function(t) {
        return t || _this.createDefinition();
      }).done(function(t) {
        _this.typeDef = t;
        return _this.update(projects);
      });
    };

    TypeUpdater.prototype.createDefinition = function() {
      return NOT_IMPLEMENTED();
    };

    TypeUpdater.prototype.update = function(projects) {
      var project,
        _this = this;
      return util.whenAll((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = projects.length; _i < _len; _i++) {
          project = projects[_i];
          _results.push(this.updateProject(project));
        }
        return _results;
      }).call(this)).done(function() {
        return _this.updateDefinition;
      });
    };

    TypeUpdater.prototype.updateProject = function(project) {
      return NOT_IMPLEMENTED();
    };

    TypeUpdater.prototype.updateDefinition = function() {};

    return TypeUpdater;

  })();

  exports.TypeUpdater = TypeUpdater;

  supportedTypes = {};

  registerTypeModule = function(moduleName) {
    var T;
    T = require(moduleName);
    return supportedTypes[T.type] = T;
  };

  registerTypeModule('./github-updater');

  updateAll = function() {
    return NOT_IMPLEMENTED();
  };

  exports.updateAll = updateAll;

}).call(this);
